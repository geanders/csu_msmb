[{"authors":null,"categories":null,"content":"Brooke Anderson is an assistant professor of environmental epidemiology at Colorado State University. Her research focuses on the health risks associated with climate-related exposures, including heat waves and air pollution, for which she has conducted several national-level studies. As part of her research, she has also published a number of open source R software packages to facilitate environmental epidemiologic research.\n","date":1578873600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1578952088,"objectID":"9eeff3b66d9db9aba8ad7e1cd7ebf977","permalink":"/authors/brooke-anderson/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/brooke-anderson/","section":"authors","summary":"Brooke Anderson is an assistant professor of environmental epidemiology at Colorado State University. Her research focuses on the health risks associated with climate-related exposures, including heat waves and air pollution, for which she has conducted several national-level studies. As part of her research, she has also published a number of open source R software packages to facilitate environmental epidemiologic research.","tags":null,"title":"Brooke Anderson","type":"authors"},{"authors":null,"categories":null,"content":"Amy Fox is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"7208808b98af56edaf6697e234c3877b","permalink":"/authors/amy-fox/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/amy-fox/","section":"authors","summary":"Amy Fox is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Amy Fox","type":"authors"},{"authors":null,"categories":null,"content":"Bailey Fosdick is an assistant professor of statistics at Colorado State University. Her primary research interests lie in the development of statistical methods for analyzing network data, with particular attention to applications in ecology and the social sciences. She also studies covariance models for multiway data, Bayesian statistics, and methods for survey analysis.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"a99ca1d34add3871e4b8e2225c007a06","permalink":"/authors/bailey-fosdick/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/bailey-fosdick/","section":"authors","summary":"Bailey Fosdick is an assistant professor of statistics at Colorado State University. Her primary research interests lie in the development of statistical methods for analyzing network data, with particular attention to applications in ecology and the social sciences. She also studies covariance models for multiway data, Bayesian statistics, and methods for survey analysis.","tags":null,"title":"Bailey Fosdick","type":"authors"},{"authors":null,"categories":null,"content":"Burton Karker is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"7979d3030119d29653a50463c423f481","permalink":"/authors/burton-karger/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/burton-karger/","section":"authors","summary":"Burton Karker is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Burton Karger","type":"authors"},{"authors":null,"categories":null,"content":"Camron Pearce is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"d7248a08ab17e3d5c2bea65700d68a9b","permalink":"/authors/camron-pearce/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/camron-pearce/","section":"authors","summary":"Camron Pearce is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Camron Pearce","type":"authors"},{"authors":null,"categories":null,"content":"Caroline Thomas is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"9d396b5864360f7d171bbd65353f8207","permalink":"/authors/caroline-thomas/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/caroline-thomas/","section":"authors","summary":"Caroline Thomas is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Caroline Thomas","type":"authors"},{"authors":null,"categories":null,"content":"Daniel Dean is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"05bf39477bf7e4b59f2e5aed40d43fa8","permalink":"/authors/daniel-dean/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/daniel-dean/","section":"authors","summary":"Daniel Dean is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Daniel Dean","type":"authors"},{"authors":null,"categories":null,"content":"Mikaela Elder is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2c23a0a0af5e97a1815648da4252c925","permalink":"/authors/mikaela-elder/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/mikaela-elder/","section":"authors","summary":"Mikaela Elder is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Mikaela Elder","type":"authors"},{"authors":null,"categories":null,"content":"Mike Lyons is an assistant professor of statistics at Colorado State University. He works in the area between pre-clinical and clinical drug development for the treatment of tuberculosis. His focus is the development and application of mathematical and computational tools to better translate experimental studies to dose selection for clinical trials. This work involves both conventional pharmacokinetic/pharmacodynamic modeling and simulation as well as physiological modeling and the use of engineering-based approaches to design optimized combination drug regimens.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2f8f117d42fb07fcd0da9af3c5821003","permalink":"/authors/mike-lyons/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/mike-lyons/","section":"authors","summary":"Mike Lyons is an assistant professor of statistics at Colorado State University. He works in the area between pre-clinical and clinical drug development for the treatment of tuberculosis. His focus is the development and application of mathematical and computational tools to better translate experimental studies to dose selection for clinical trials. This work involves both conventional pharmacokinetic/pharmacodynamic modeling and simulation as well as physiological modeling and the use of engineering-based approaches to design optimized combination drug regimens.","tags":null,"title":"Mike Lyons","type":"authors"},{"authors":null,"categories":null,"content":"Sarah Cooper is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"a2f4c4d8a79a270a1ff69d28937404db","permalink":"/authors/sarah-cooper/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sarah-cooper/","section":"authors","summary":"Sarah Cooper is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Sarah Cooper","type":"authors"},{"authors":null,"categories":null,"content":"Sere Williams is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"359ce304229cff7b3cd9e06860d9e8f8","permalink":"/authors/sere-williams/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sere-williams/","section":"authors","summary":"Sere Williams is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Sere Williams","type":"authors"},{"authors":null,"categories":null,"content":"Sherry WeMott-Colton is a graduate student in the Department of Environmental and Radiological Health Sciences at Colorado State University. Her research focuses on evironmental and social factors impacting health.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"93e55912b52bf4b4c2aca0826be7d218","permalink":"/authors/sherry-wemott/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sherry-wemott/","section":"authors","summary":"Sherry WeMott-Colton is a graduate student in the Department of Environmental and Radiological Health Sciences at Colorado State University. Her research focuses on evironmental and social factors impacting health.","tags":null,"title":"Sherry WeMott","type":"authors"},{"authors":null,"categories":null,"content":"Sierra Pugh is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"a0b6f7b6e4c0c6781dd1b5bb9f45c4be","permalink":"/authors/sierra-pugh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sierra-pugh/","section":"authors","summary":"Sierra Pugh is a [graduate / undergraudate] student in the Department of [x] at Colorado State University. [Short description of research and academic interests.]","tags":null,"title":"Sierra Pugh","type":"authors"},{"authors":[],"categories":["vocabulary","instructions"],"content":" Here are some tips on writing up the vocabulary list for a chapter:\n You should include all words in the chapter that are given in bold. Be sure to look for bolded terms in the sidenotes and end-of-chapter exercises, too! Occassionally, the authors use bold for subheadings (see the “Why R and Bioconductor?” section in the Introduction or the “Summary of this chapter” section of Chapter 1). These subheadings do not need to be included in the vocabulary list for the chapter. If you find one or more common synonyms for a term, you can include that with the term in the list (e.g., “variability / spread / dispersion”). It is fine to use wording from the chapter text or to use wording directly from other websites or sources. However, you must include a list of any of the sources that you used to write your definitions at the bottom of the vocabulary blog post. Further, if you are using sources besides the course textbook, make sure that the definition is appropriate in the context of our course. Often, words will have a number of different definitions across different disciplines. Try to use more formal sources (e.g., textbooks, other published books) rather than less formal websites to find definitions whenever possible. Feel free to change a term from singular to plural or vice versa if it helps you in writing the term’s definition. Similarly, if the bolded term does not include all the words that would be helpful (e.g., the bolded term is “sufficient”, but the term of interest is “sufficient statistic”), you can add a word or two to the bolded term. The bolded terms in the book tend to favor statistical terms over biological ones. If there are some biological terms you needed to look up when you read the chapter, or that you think some people in the class might not know, feel free to add them to your vocabulary list. You can see an example of a vocabulary blog post for Chapter 1. You can use this as templates for your own post. Be sure to include the tag “vocabulary”, as well as a tag for your chapter, on the blog post. If there are two bolded words that mean the same thing, put them both on the vocabulary list (with the same definition). If a vocabulary term was defined in a previous chapter’s vocabulary list, feel free to reuse the definition. Our library has excellent resources that you can use to help write your definitions.  ","date":1580169600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578958837,"objectID":"68c446e333b77bed5819f47ebe54673d","permalink":"/post/tips-on-writing-a-vocabulary-list/","publishdate":"2020-01-28T00:00:00Z","relpermalink":"/post/tips-on-writing-a-vocabulary-list/","section":"post","summary":"Here are some tips on writing up the vocabulary list for a chapter:\n You should include all words in the chapter that are given in bold. Be sure to look for bolded terms in the sidenotes and end-of-chapter exercises, too! Occassionally, the authors use bold for subheadings (see the “Why R and Bioconductor?” section in the Introduction or the “Summary of this chapter” section of Chapter 1). These subheadings do not need to be included in the vocabulary list for the chapter.","tags":["vocabulary","instructions"],"title":"Tips on writing a vocabulary list","type":"post"},{"authors":["Brooke Anderson"],"categories":["blogdown","github"],"content":" One goal of this course is to continue developing your data science programming skills. This will include plenty of work on R programming, but also more to help you learn tools for reproducible research, like RMarkdown and git.\nWe will be using our course website as a collaboration tool during this course. This website was created using blogdown, which allows you to create and update a blogging website with R and RStudio. We are using a GitHub repository to share all the code for this website and serving the site using Netlify.\nDuring this course, you will have two graded products that you will need to submit as blog posts to our site. One will be a glossary of vocabulary terms for one chapter of the book, listing key words and their definitions for the chapter. The second will be the “official” version of one week’s in-course exercise.\nTo help get you up to speed with using blogdown, GitHub, and RMarkdown with our site, we’ll start by having you update your profile details for our website. We’ll also use this to give you all a chance to introduce yourselves to each other and to us. This post covers the details for how to do that.\nRequired set-up This exercise, and this course as a whole, requires a certain set-up on your computer:\nR installed on your laptop RStudio installed on your laptop git installed on your laptop Your own GitHub account  If you already have all this set-up, you can skip to the next section. Otherwise, this section has details on completing this set up.\nInstall R on your laptop You can install R from the Comprehensive R Archive Network (CRAN). Search for the version appropriate for your computer’s operating system.\nIf you already have R installed, check your version number. If it’s older than six months or so, you should probably update your version for the class. You can use the sessionInfo() function to find out details about your current R session, including the version of R you’re currently running:\nsessionInfo() ## R version 3.6.2 (2019-12-12) ## Platform: x86_64-apple-darwin15.6.0 (64-bit) ## Running under: macOS Mojave 10.14.6 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] compiler_3.6.2 magrittr_1.5 bookdown_0.16 tools_3.6.2 ## [5] htmltools_0.4.0 yaml_2.2.0 Rcpp_1.0.3 stringi_1.4.5 ## [9] rmarkdown_2.0 blogdown_0.17 knitr_1.26 stringr_1.4.0 ## [13] digest_0.6.23 xfun_0.12 rlang_0.4.2 evaluate_0.14 Based on the return from this call, for example, I can tell that I have R version 3.6.2 (2019-12-12).\n Install RStudio on your laptop You can download RStudio directly from their website. The free Desktop version will work great for this course. If your version of RStudio is more than a year old, you should probably update it for this course. To check your version of R Studio, open R Studio, go to the “RStudio” tab at the top, and click on “About RStudio”.\n Install git on your laptop The software git is version control software, which will help you record and track changes that you’ve made to code and other plain text documents.\nIt’s free to download. Go to https://git-scm.com/downloads and select the version for your operating system. For this software, you’re probably okay if you downloaded it a little while ago (although if more than two years or so, you might want to update).\n Get a GitHub account You will need a (free) GitHub account for this course. You can sign up for one (if you don’t already have one) at https://github.com/. While there are some fancier paid plans available, the free account will work great for this class.\nWhen you sign up, you’ll get to choose a GitHub handle. You might want to make this something that will be easy for people to remember. For example, if your name is still available, that would be a great option. This handle will form part of the address to all of your GitHub repositories, so it is convenient if it is easy for people you work with to remember (mine, unfortunately, is not!).\n  About blogdown The blogdown package is an R package created by Yihui Xie that allows you to use R and RStudio to create and update your own webpage with a blog. The appeal of being able to do this with R is that you can write blog posts using RMarkdown, so you can include executable R code in each post.\nblogdown creates your site using the Hugo framework. Hugo is software that can build static websites (i.e., ones that can be served to viewers without needing database backends or other fancy things). People have created different templates for Hugo-generated websites, and these templates provide the structure and framework, while you can adapt the content.\nThis means that our website (which is, essentially, a collection of files in a directory written in a form that a web browser can convert to a pretty website) includes a lot of files and code that come straight from a template that someone else wrote, and then places here and there where we can add or change the files to make the website ours.\nOne of the ways that you can change the website is to add posts. You’ll be doing this later in the course by contributing two blog posts of your own, one on the vocabulary for a chapter and one with the “official” version of the exercise for a chapter. We’ll cover more on how to add a blog post later in the course.\nThe other way that you can change the website is to change some of its “front page” data. The website has a section on “People”, with the profiles of everyone in the class. The information shown in this section is all saved in plain text files in our website’s file directory. Today, you’ll change you details in the file dedicated to you and then send those changes back to us so we can update the online version of the site.\nYou will need to install two pieces of software to work on our website. First, you’ll need the R package blogdown. You can install this package in the normal way, using install.packages:\ninstall.packages(\u0026quot;blogdown\u0026quot;) Once you have blogdown, you can install the Hugo software using a function in the blogdown package, install_hugo:\nlibrary(blogdown) install_hugo() For both these installations, your computer will need to be online or you’ll get an error.\n Getting a fork of our repository on your computer All our websites files are posted in a GitHub repository at https://github.com/geanders/csu_msmb. With this (or any) GitHub repository, you can suggest changes by forking the repository, cloning the fork to your computer, making and committing the changes, pushing those commits back up to your fork of the repository on GitHub, and then submitting a pull request.\nForking a GitHub repository   via GIPHY When you fork a GitHub repository, you get a copy of that repository that you can play around with and change yourself, without it affecting the original repository. It’s essentially just copying the whole repository, with all its files, into a repository on your GitHub account.\nThe only thing that makes it different from a plain copy (and what makes it really powerful in some cases) is that, if you decide that your changes might make the original repository better, you can submit a pull request. This requests that the owners of the original repository update it to incorporate the changes you’ve made on your fork of the repository. The original authors can review each of the commits you’ve made, so they can even cherry-pick your changes if they want.\nGitHub also lets the original authors see if there are any merge conflicts created from changes that they’ve made to the original repository since you forked it. This can let the original authors see how hard it will be to incorporate all of your changes in the forked version with their version of the repository.\nTo fork the repository with our course’s website materials, all you’ll need to do is go to our GitHub repository for the course website (while you’re signed in to GitHub) and click on the “Fork” button towards the right of the page. Now go and check in the “Repositories” section of your own GitHub account—you should see that you now have a forked copy of the “csu_msmb” repository.\nIn this exercise, you’ll work with the fork of the repository, and then once you’ve made your changes, you submit a pull request, so that we can get your changes back into the main webpage.\nIf you need more help on how to fork a repository, GitHub has a help page on the topic that might be useful.\n Cloning the fork to your computer Next, you’ll want to get a copy of your forked repository onto your own computer, where you can work with it, make changes, and preview the website with your updates.\nTo do this, you’ll clone your fork of the repository onto your computer. The version of the repository on GitHub is called the remote branch of the repository and the version you get on your computer once you’ve cloned it is the local branch. By cloning (instead of just downloading), you’ll maintain a connection between the remote and local versions through git, which will allow you to push changes that you make and commit on your own computer up to the remote branch on GitHub.\nGo to GitHub, make sure you are logged into your account, and navigate to your forked version of the repository for this class. There should be a button to the right of the page that says “Clone or download” (you may need to scroll down to find it).\nWhen you click on this button, it will give you a choice between “SSH” and “HTTPS” for the protocol to use to connect your local and remote branches of the repository. You’re welcome to try either, but I usually (on a Mac) have better luck with “SSH”. Occasionally, people running Windows in my courses have had better luck with “HTTPS”, although for most folks “SSH” seems to work fine. Once you choose which protocol to use, you can copy the snippet of code that is given in the pop-up.\nNext, you’ll run this code from a bash shell on your own computer to clone the repository. You first will need to open a shell. If you’re on a Mac, you can do that with the “Terminal” application. With Windows, you’ll probably need to use the bash shell that comes with the Windows version of git. Search your programs for “bash” or “git bash” and see if you see something that looks promising.\nOnce you open a shell, you’ll see a command prompt, like this:\nusername$ You can type shell commands here and then press “Return” to run them. You should first move into the directory where you want to clone the repository. Your “Desktop” might be a good place for it for now (unless you have some organization you use for course-related files). The cd shell command lets you “change directory”. If you don’t put anything after cd, it will change to your home directory. Otherwise, it will move to the directory you specify. For example, if the “Desktop” directory is a subdirectory of my home directory, I could move into it by running:\ncd Desktop If you have not use shell commands much before and are having any problems navigating to the directory you’d like, let us know in class, and one of us can help you.\nOnce you are in this directory, you’ll paste git clone followed by the command you copied from the “Clone or download” button on GitHub. It will probably look something like this (but with your GitHub handle in place of “geanders”):\ngit clone git@github.com:geanders/csu_msmb.git When you run this, you may have to put in your GitHub username and password. You may also get some questions about whether you really want to download the repository (you do). If everything’s successful, you should see that there’s a new directory called “csu_msmb” in which directory you decided to put it (“Desktop”, for example).\nThis directory has a special file in it that makes it an R Project—a special version of a file directory with some extra structure and saved preferences. Make sure that you open the project as a whole when you work on it in R Studio, rather than opening just by clicking on one of the files. To do this, you can go in R Studio to \"File\" -\u0026gt; \"Open Project...\" and then navigate through your file directory to the “csu_msmb” directory you just cloned.\nIf you need more help, GitHub has a help page with more on how to clone a repository from GitHub to your own computer.\n Changing and committing in RStudio When you have R Studio open to an R Project that is using git version control, R Studio will include a “Git” pane. You can use this pane to commit changes you make to files in the repository, write messages explaining those commits, and push your changes to your remote branch of the repository on GitHub.\nWhen you commit a change, that change is written into a log of every change made to the files in the repository. You can later look through these commits, so you’ll want the commit messages to make sense when you read them in the future. When you’re collaborating with others, the commit messages will help you see what each other are doing.\nWhen you first commit a change, the commit is only saved in your local branch. To send it up to the remote branch of the repository on GitHub, you’ll need to push those commits. Once you push your local commits, your GitHub repository should exactly mirror your local repository.\nAs soon as you make a change to a file in the repository that’s being track by git, that file will show up in the Git pane, with a little check box beside it. When you’re ready to commit a change, click on the “Commit” button on the top left of the Git pane. This will open a pop-up box.\nIn this box, click the check boxes for all the changed files on the left you’d like to include in the commit. Then write a short commit message, describing the changes you’ve made. You should try to fit it all in the first line of the “commit message” window. If you can’t, write a short description in the first line, skip a line, and then you can write as much as you want.\nOnce you’ve written your commit message, click on the “commit” button. This will record this commit. To check that it has, you can go to the “History” tab and make sure the commit shows up as the last thing in your history.\n  Updating your profile details Rendering blogdown websites in RStudio Once you’ve opened the R Project with our website, you can use the blogdown package to serve the website. This will only update and show the website on your computer (not change our main website online), but it lets you check that everything’s working and preview what the site will look like online.\nRStudio’s “Viewer” pane can work as a web browser. This means that it can show our website. When you have opened the R Project with the cloned repository of our website (“csu_msmb”), try running the following in your R console to render the site:\nlibrary(blogdown) serve_site() If everything worked, you should be able to see a version of the website in your RStudio “Viewer” pane. If you’d like to see it in your usual web browser, click on the “Show in new window” button on the top left of the “Viewer” pane (this looks like a little rectangle with an arrow on it). This will open the website in your default web browser.\nTake a look at the web address when you do—it should start with 127.0.0.1. This is a loopback address—an IP address that refers back to your local computer (localhost), rather than an outside web servers. Anytime you’re building a website and checking it locally, you’ll see this in the web address when you open the site in a web browser. (You can even get T shirts with “There’s no place like 127.0.0.1”).\nAs you work through the next parts of the exercise, the rendered website in the Viewer pane should update every time you save your changes to files in the website. If you have the website open in your default browser, too, you might want to refresh the site with the normal “Refresh” button for your browser. If things ever seem like they’ve gotten out of sink, you can always re-run serve_site().\n Navigating the website’s file directory to find your profile We all have our own author profile in a subdirectory within the website’s files. To find yours, go to the “content” subdirectory of the website files and then the “authors” subdirectory within that. You should see a subdirectory there with your name. Click on that and you’ll see the two files that make up your author profile, \"_index.md\" and “avatar.jpg”.\n Updating your information in \"_index.md\" Your details are all given in the \"_index.md\" file in your author subdirectory. To update your details on the website, you’ll need to change your details in this file.\nThe file is written in a Markup language called YAML. If you’ve used RMarkdown before, you might recognize this syntax from the information that goes at the very top of each RMarkdown file.\nIn your \"_index.md\" file, anywhere there is a placeholder, like “[Year]” or “[Institution]”, replace the placeholder with your own information.\nBe very careful when changing things like spaces and hyphens in the structure, as YAML is based on parsing these elements. As with any Markup language, as you are learning it, it’s best to try to render the final document often as you make changes, so you can make sure the changes make it through like you want and so you can catch any problems quickly.\nMake sure you change the following sections:\n bio: education: email: interests: name: organizations:  Some of the sections in social: are commented out, including the information for buttons for GitHub, GoogleScholar, and Twitter. If you have accounts through any of these services, you can add these buttons with your updated information. Just delete the # at the beginning of all lines in that section and then change the handle or web address information so that it links to your account for that service. In this section, also update your email address, with mailto: at the beginning, for the email icon.\nThe very bottom of the file, under the ---, provides space for you to write a paragraph summarizing who you are and your academic / research interests.\nBe sure to save the file after you’ve made all your changes.\nFor an example of a completed \"_index.md\" file, you can see mine here.\n Updating your avatar picture There’s also a place in your author profile directory to include a photo to represent yourself. To change from the default (the blue guy), replace the “avatar.jpg” file in your author profile directory with the JPG of your choice, and use the same file name (“avatar.jpg”).\nIt would be helpful for you to use a photo of yourself, since that will help us put names with faces, but if you don’t have one or would prefer not to use your own photo, feel free to pick any photo (for which you have appropriate permissions) to use.\nYou might need to crop your photo some to get it to show up in the circle on the website correctly. Try with your uncropped picture once, check the website in the RStudio Viewer pane to see how it looks, and then if it doesn’t work, play around with cropping it until you’re happy.\n  Submitting your updates Pushing the commits back to GitHub When you are ready to push all the changes you’ve committed to your local branch, you can do this from the Git pane in R Studio. In this pane, there are two arrows: a green up arrow and a blue down arrow. Click on the green up arrow to push the commits from your computer (the local branch) to GitHub (the remote branch). Visit your GitHub page for the repository (or refresh it if you already had it open) and check if your changes have successfully been pushed to the remote branch.\nIf you haven’t created an SSH key and shared it with GitHub, you may be asked for your GitHub password every time you try to push. This will get to be a pain, so you’ll probably want to set up an SSH key. For more on how to do this (as well as other help with using RStudio with version control), check out RStudio’s help documentation on the topic.\n Requesting that we pull your changes   via GIPHY At this point, you’ve made changes, checked them, and pushed them to your GitHub version of the repository. Remember, though, that you forked the repository from our original one, and so you’ve been working with a copy of the repository this whole time, rather than changing our original version.\nTo get your changes incorporated into our original version, you’ll need to request that we pull your changes into the original repository. To do this, you can submit a pull request through GitHub. Go to the main page for your fork of the GitHub repository and look for a button that says “New pull request”. When you click this, it will walk you through making a pull request. You’ll have a space to write a message describing the changes you’re recommending in the pull request.\nIf you’d like more details on this information, GitHub has help documentation on pull requests.\n  ","date":1578873600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578952088,"objectID":"aaf734a217c669a7993ece1eb560bb61","permalink":"/post/add-profile-details/","publishdate":"2020-01-13T00:00:00Z","relpermalink":"/post/add-profile-details/","section":"post","summary":"One goal of this course is to continue developing your data science programming skills. This will include plenty of work on R programming, but also more to help you learn tools for reproducible research, like RMarkdown and git.\nWe will be using our course website as a collaboration tool during this course. This website was created using blogdown, which allows you to create and update a blogging website with R and RStudio.","tags":["blogdown","github"],"title":"How to add your profile details to our course website","type":"post"},{"authors":[],"categories":["vocabulary","Chapter 1"],"content":"  Chapter 1 covers generative modeling for discrete data. It introduces a number of terms covering probablity and statistical modeling, as well as a few biological terms. The vocabulary words for Chapter 1 are:\n        probability model  A mathematical description of the possible outcomes of an experiment and the probability of each of those outcomes.    vector  In programming, a one-dimensional array of data, all with the same data type.    discrete event  In statistics, an event that can take a non-negative integer value (e.g., number of deaths in a community by day).    categorical variable  A variable that can belong to one of a finite set of levels.    levels  In the context of a categorical variable, the set of values to which the variable can be assigned.    factor  In the context of statistical programming, a data type that can take one of a limited number of possible values (e.g., sex, nationality).    exchangeable  A way to describe a random variable for which the order in which the data are observed doesn’t matter.    sufficient statistic  A statistic that, even though it is a summary, contains all the information that you would use from an original, uncondensed form of the data.    Bernoulli distribution  A probability distribution to describe the outcome probability for two possible events (e.g., win / loss).    parameter  A numerical value that describes a population or a model.    complementary  A description of two events who are mutually exclusive and whose probabilities sum to one (i.e., either one event or the other is guaranteed to happen, but not both).    binomial random variable  A variable whose values occur according to a binomial probability distribution.    probability mass distribution  A distribution giving the probability that a discrete random variable is equal to a given value.    Poisson distribution  A probability distribution that is appropriate when the probability of success is small and the number of trials is large.    epitope / antigen determinent  Site on a macromolecular antigen to which an antibody binds. This is the part of an antigen that is recognized by the immune system.    Enzyme-linked immunosorbent assay (ELISA)  An assay that is used to detect specific epitopes at different positions along a protein.    conditional on  Given    cumulative distribution function  A distribution giving the probability that a random variable is less than given values.    extreme value analysis  Analysis focused on the behavior of the very large or the very small values of a random distribution, allowing an exploration of the probability of rare events.    rare event  Something that occurs with a very low probability.    rank statistic  A statistic based on the order of the relative positions of observations based on a certain characteristics.    Monte Carlo method  A method that uses a computer simulation based on a generative model to determine the probabilities of the events we’re interested in.    probability or generative modeling  A method of modeling where all the parameters are known and the mathematical theory allows us to work by deduction.    deduction  A top-down method of reasoning, starting from a theory or principle rather than from data.    statistical modeling  A method of modeling where the distribution of the data is not known.    fit  In the context of statistical modeling, estimating the parameters of a model based on observed data thought to be generated by the model.    multinomial  A generalization of the binomial distribution to cases where a certain number of outcomes can occur in each of a number of trials.    power / true positive rate  The probability of detecting something if it is there.    null hypothesis  Often, a hypothesis of “no association” that is used as a counterpart to a more interesting alternative hypothesis in hypothesis testing.    matrix  In programming, a two-dimensional array of data, all with the same data type.    expected value  The predicted value of a variable.    variability / spread / dispersion  In statistics, the amount by which a set of observations deviate from their mean.    statistic  A numerical characteristic of a sample.    null distribution  The probability distribution for the null hypothesis.    alternative  In the context of a generating process, the generating process that is considered in comparison to the generating process under the null hypothesis.    chi-squared distribution  A distribution often appropriate for assessing goodness-of-fit, including for models fit to contingency tables.    p-value  The probability of seeing the data that were observed given a hypothesis.    probability density function  A distribution giving the relative likelihood that a continuous random variable is equal to a given value.    default  In the context of function parameters for an R function, the value that is used if no custom value is specified.    C. elegans genome nucleotide frequency  How often adenine, cytosine, guanine, and thymine occur in the DNA of a roundwork often used in scientific research.    Bioconductor  Open-source software that provides contributed programs for bioinformatic data analysis.    codon  A three-nucleotide sequence that specifies the amino acid to be created next (or to start or stop synthesis).    DNA read  An inferred sequence of base pairs for a single DNA fragment, based on sequencing.    nucleotide  In the context of DNA, one of four compounds (adenine (A); cytosince (C); guanine (G); and tymine (T)) that make up the basic information unit.    genome  An organism’s complete set of DNA, including all of its genes.    replication cycle  In biology, the process that begins with the infection of a host cell by a virus and ends with the release of mature progeny virus particles.    point mutation  A change, addition, or deletion of a single nucleotide in a gene sequence.    genotype  The genetic make-up of an individual’s cells, including how the individual’s genetic make-up differs from others’.    diploid  Having genetic material in two complete sets of chromosomes, from two parents.    protein  A compound made up of amino acids; one of the four types of macromolecules that make up living organisms.    antibody  A type of protein made by certain white blood cells in response to an antigen.    antigen  A foreign substance in the body to which the immune system reacts.     Sources consulted or cited Some of the definitions above are based in part or whole on listed definitions in the following sources.\n Holmes and Huber, 2019. Modern Statistics for Modern Biology. Cambridge University Press, Cambridge, United Kingdom. Everitt and Skrondal, 2010. The Cambridge Dictionary of Statistics (Fourth Edition). Cambridge University Press, Cambridge, United Kingdom. Bioconductor: Open Source Software for Bioinformatics. https://www.bioconductor.org/ Wikipedia: The Free Encyclopedia. https://en.wikipedia.org/wiki/Main_Page NIH Genetics Home Reference. https://ghr.nlm.nih.gov/ NCI Dictionary of Cancer Terms. https://www.cancer.gov/publications/dictionaries/cancer-terms   Practice   ","date":1578873600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578957646,"objectID":"689ae0d83c0f37774ff128d4fd9d9d42","permalink":"/post/vocabulary-for-chapter-1/","publishdate":"2020-01-13T00:00:00Z","relpermalink":"/post/vocabulary-for-chapter-1/","section":"post","summary":"Chapter 1 covers generative modeling for discrete data. It introduces a number of terms covering probablity and statistical modeling, as well as a few biological terms. The vocabulary words for Chapter 1 are:\n        probability model  A mathematical description of the possible outcomes of an experiment and the probability of each of those outcomes.    vector  In programming, a one-dimensional array of data, all with the same data type.","tags":["vocabulary","Chapter 1"],"title":"Vocabulary for Chapter 1","type":"post"}]